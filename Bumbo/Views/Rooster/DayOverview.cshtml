@model Bumbo.Models.RoosterDayViewModel
@{
    ViewData["Title"] = "Rooster";
}


<div class="container mt-4">
    <h1 class="text-center mb-4">@Model.Date.ToString("dddd, dd MMMM yyyy")</h1>

    <div class="row">
        @foreach (var departmentHour in Model.DepartmentHours)
        {
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card h-100 shadow-sm border @(departmentHour.Value.CurrentHours < departmentHour.Value.RequiredHours ? "border-danger" : "border-success")">
                    <div class="card-header d-flex justify-content-between align-items-center text-white bg-dark">
                        <span>@departmentHour.Key -- @departmentHour.Value.CurrentHours / @departmentHour.Value.RequiredHours Uur</span>
                        <a class="btn btn-light btn-sm" href="@Url.Action("AddShift", "Rooster", new { date = Model.Date, afdeling = departmentHour.Key, otherChapters = false })">
                            <i class="fa fa-plus"></i>
                        </a>
                    </div>
                    <div class="card-body">
                        @foreach (var departmentShift in Model.DepartmentShifts)
                        {
                            if (departmentShift.Key == departmentHour.Key && departmentShift.Value != null)
                            {
                                @foreach (var shift in departmentShift.Value)
                                {
                                    <div class="d-flex justify-content-between align-items-center mb-2 p-2 rounded border bg-light"
                                         style="border-color: @(departmentHour.Value.CurrentHours < departmentHour.Value.RequiredHours ? "#ff3d47" : "lawngreen")">
                                        <div>
                                            <p class="mb-0"><strong>@shift.EmployeeName</strong></p>
                                            <p class="mb-0">@shift.StartTime - @shift.EndTime</p>
                                        </div>
                                        <a class="btn btn-secondary btn-sm" href="@Url.Action("EditShift", "Rooster", new { shiftID = shift.ShiftId })">
                                            <i class="fa-solid fa-pen"></i>
                                        </a>
                                        <a class="btn btn-danger btn-sm" href="@Url.Action("RemoveShift", "Rooster", new { shiftID = shift.ShiftId, year = Model.Year, weekNumber = Model.WeekNumber, date = Model.Date })">
                                            <i class="fa fa-trash"></i>
                                        </a>
                                    </div>
                                }
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>